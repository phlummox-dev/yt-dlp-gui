name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:

permissions:
  contents: write

env:
  QT_QPA_PLATFORM: offscreen

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}


    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Setup uv ${{ matrix.runtime }}
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          enable-cache: true
          cache-suffix: ${{ matrix.runtime }}

      - name: Install dependencies
        run: |
          uv sync --no-dev

      - name: generate metadata module
        shell: bash
        run: |
          # NB: on linux, this is done as part of make docker-build.
          # but no harm doing it twice.
          uv run ./scripts/generate_metadata.py

      - name: Build application windows
        if: startsWith(matrix.os, 'windows')
        run: |
          uv run pyinstaller --clean -y yt-dlp-gui.spec
          Compress-Archive -Path dist/* -DestinationPath ./yt-dlp-gui-${{ matrix.runtime }}.zip

      - name: Build application ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          make docker-image-build
          make build-linux-exe

      - name: Build application macOS
        if: startsWith(matrix.os, 'mac')
        run: |
          make build-exe
          zip -r yt-dlp-gui-${{ matrix.os }}.zip dist/*

      - name: Upload artifact ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: yt-dlp-gui-${{ matrix.os }}-Build-${{ github.run_number }}
          path: ./dist

      #- name: Upload release ${{ matrix.os }}
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: yt-dlp-gui-${{ matrix.os }}-Build-${{ github.run_number }}.zip
      #    path: ./app/yt-dlp-gui-${{ matrix.os }}.zip
